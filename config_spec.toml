[general]
conf_file_param = "conf"
conf_dir_param = "conf_dir"
doc = """
Bitcoin RPC proxy enables you to define finer-grained permissions for your bitcoind. You can for example only allow certain calls to be made by specific users (by sharing specific password). The calls are defined using whitelist and an example of configuration file is provided with the source code."""

#[debconf]
#package_name = "bitcoin-rpc-proxy-mainnet"

[[param]]
name = "bitcoind_user"
type = "String"
doc = "The user name used when connecting to the real bitcoind."

[[param]]
name = "bitcoind_password"
type = "String"
argument = false
doc = "The password used when connecting to the real bitcoind."

[[param]]
name = "cookie_file"
type = "std::path::PathBuf"
argument = false
doc = "The file in which bitcoind stores authentication cookie. Can be used instead of user:password."

[[param]]
name = "bind_address"
type = "::std::net::IpAddr"
default = "[127, 0, 0, 1].into()"
doc = "The address used for listening."
#debconf_priority = "low"
#debconf_default = "127.0.0.1"

[[param]]
name = "bind_port"
type = "u16"
default = "8331"
doc = "The port used for listening."
#debconf_priority = "low"
#debconf_default = "8331"

[[param]]
name = "bitcoind_address"
type = "::std::net::IpAddr"
default = "[127, 0, 0, 1].into()"
doc = "The address of the real bitcoind."

[[param]]
name = "bitcoind_port"
type = "u16"
default = "8332"
doc = "The port of the real bitcoind."

[[param]]
name = "user"
type = "std::collections::HashMap<String, crate::users::input::User>"
merge_fn = "std::iter::Extend::extend"
default = "Default::default()"
argument = false
doc = "Map of user names to user configs. Each user must specify `password` field and an array of allowed calls named `allowed_calls`"

[[param]]
name = "peer_timeout"
type = "u64"
default = "30"
doc = "How many seconds to wait for a response from a peer before failing"

[[param]]
name = "max_peer_age"
type = "u64"
default = "300"
doc = "How many seconds to wait before refreshing the peer list"

[[param]]
name = "max_peer_concurrency"
type = "usize"
doc = "How many peers to reach out to concurrently for block data"

[[param]]
name = "tor_proxy"
type = "std::net::SocketAddr"
optional = true
doc = "The IP address and port of the Tor SOCKSv5 proxy to use for peer connections"

[[param]]
name = "tor_only"
type = "bool"
default = "false"
doc = "Use tor for non-.onion peer connections"

[[switch]]
name = "default_fetch_blocks"
doc = "Fetch blocks from peers for all users that do NOT specify fetch_blocks = false"

[[switch]]
name = "verbose"
abbr = "v"
doc = "Increase logging verbosity"
count = true
